# For this project, I downloaded Spotify data from Kaggle.

# Then I created a table to insert Spotify data into.

# Finally, I performed analytics on the data using SQL. 

#Table Creation:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );


#I then entered the Spotify .csv into the abovementioned table

#Using the table and dataset, I preformed the following analysis: 

1. What artist has the most songs in the top 50, how many do they have?

SELECT artist_name, COUNT(artist_name) as number_of_hits
FROM Spotifydata
GROUP BY artist_name
ORDER BY number_of_hits desc
LIMIT 1;


2. Who wrote the song has the fastest tempo? What is it? 

SELECT artist_name, track_name, tempo
FROM Spotifydata
ORDER BY tempo desc
LIMIT 1;


3. Which artist has the most popular song? 

SELECT artist_name, track_name, MAX(popularity)
FROM Spotifydata;

4. What is the avg. popularity by artist? 

SELECT artist_name, AVG(popularity)
FROM Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity)desc;


5. Who are the top 10 artists based on popularity? 

SELECT artist_name, AVG(popularity)
FROM Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity)desc
LIMIT 10;


#6. What is the average popularity per artist? Show artists with an average popularity of 90 or greater as "Top Star".

WITH popularity_average_CTE AS (
SELECT artist_name, avg(popularity) AS average_popularity
FROM Spotifydata
GROUP BY artist_name )

SELECT artist_name, average_popularity, 'Top Star' AS tag 
FROM popularity_average_CTE
WHERE average_popularity>=90;
